/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.Component;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nishigandha
 */
public class ManagePersonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MainPersonJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    public ManagePersonJPanel(JPanel userProcessContainer, EcoSystem ecosystem) {
        initComponents();
        this.ecosystem = ecosystem;
        this.userProcessContainer = userProcessContainer;

        populatePersonTable();
        btnUpdateP.setEnabled(false);
        btnDelete.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPHNoP = new javax.swing.JTextField();
        lblStreet = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        txtZipP = new javax.swing.JTextField();
        txtEmailP = new javax.swing.JTextField();
        lblApartment = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtCommunityP = new javax.swing.JTextField();
        btnUpdateP = new javax.swing.JButton();
        lblCommunity = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        lblManagePerson = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMPerson = new javax.swing.JTable();
        txtAddressP = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        txtIdP = new javax.swing.JTextField();
        txtNameP = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        txtAgeP = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(167, 199, 231));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPHNoP.setBackground(new java.awt.Color(214, 229, 244));
        add(txtPHNoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 490, 212, -1));

        lblStreet.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblStreet.setText("Address:");
        add(lblStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 540, -1, -1));

        lblPhone.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblPhone.setText("Phone No:");
        add(lblPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 490, -1, -1));

        txtZipP.setBackground(new java.awt.Color(214, 229, 244));
        add(txtZipP, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 570, 212, -1));

        txtEmailP.setBackground(new java.awt.Color(214, 229, 244));
        add(txtEmailP, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 530, 212, -1));

        lblApartment.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblApartment.setText("Zip Code:");
        add(lblApartment, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 580, -1, -1));

        lblEmail.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblEmail.setText("Email:");
        add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 530, -1, -1));

        txtCommunityP.setBackground(new java.awt.Color(214, 229, 244));
        add(txtCommunityP, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 570, 212, -1));

        btnUpdateP.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdateP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdateP.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateP.setText("Update Person");
        btnUpdateP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePActionPerformed(evt);
            }
        });
        add(btnUpdateP, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 660, 130, 20));

        lblCommunity.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblCommunity.setText("Community:");
        add(lblCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 570, -1, -1));

        btnView.setBackground(new java.awt.Color(0, 0, 0));
        btnView.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 340, -1, -1));

        btnCreate.setBackground(new java.awt.Color(0, 0, 0));
        btnCreate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Add Person");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 660, -1, -1));

        lblManagePerson.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblManagePerson.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManagePerson.setText("MANAGE PERSON DETAILS");
        add(lblManagePerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 62, 880, -1));

        lblName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblName.setText("Name:");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 490, -1, -1));

        tblMPerson.setBackground(new java.awt.Color(214, 229, 244));
        tblMPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "ID", "Street", "Zipcode", "Age", "Community", "Phone No", "Email"
            }
        ));
        jScrollPane1.setViewportView(tblMPerson);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 129, 980, 183));

        txtAddressP.setBackground(new java.awt.Color(214, 229, 244));
        add(txtAddressP, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 530, 212, -1));

        btnDelete.setBackground(new java.awt.Color(0, 0, 0));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 340, -1, -1));

        txtIdP.setBackground(new java.awt.Color(214, 229, 244));
        add(txtIdP, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 450, 212, -1));

        txtNameP.setBackground(new java.awt.Color(214, 229, 244));
        add(txtNameP, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 490, 212, -1));

        lblID.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblID.setText("ID:");
        add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 450, -1, -1));

        txtAgeP.setBackground(new java.awt.Color(214, 229, 244));
        add(txtAgeP, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 450, 212, -1));

        lblAge.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblAge.setText("Age:");
        add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 450, -1, -1));

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, -1, -1));

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 660, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assests/icons8-id-verified-48.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 50, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assests/5.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        String ID = txtIdP.getText();
        String name = txtNameP.getText();
        String street = txtAddressP.getText();
        String zipcode = txtZipP.getText();
        String age = txtAgeP.getText();
        String community = txtCommunityP.getText();
        String phoneNo = txtPHNoP.getText();
        String email = txtEmailP.getText();


        boolean flag1, flag2 ;
        flag1 = txtIdP.getText().matches("^[0-9]+$");

        flag2 = txtAgeP.getText().matches("^[0-9]+$");

        if (ID.isEmpty() || age.isEmpty() || name.isEmpty() || phoneNo.isEmpty() || email.isEmpty() || community.isEmpty() || zipcode.isEmpty() || street.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty Fields", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else if (validateId(Integer.parseInt(ID))==false) {
            JOptionPane.showMessageDialog(null, "Invalid Phone Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else if (phoneNo.length() != 10) {
            JOptionPane.showMessageDialog(null, "Invalid Phone Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else if (validateEmail(email) == false) {
            JOptionPane.showMessageDialog(null, "Invalid Email", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if (zipcode.length() != 5) {
            JOptionPane.showMessageDialog(null, "Invalid Zipcode", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        else if(flag1 == false) {
            JOptionPane.showMessageDialog(null, "Person Id cannot have String values");
            return;
        }
        else if(flag2 == false) {
            JOptionPane.showMessageDialog(null, "Person Age cannot have String values");
            return;
        }
        else if(!ecosystem.getPersonDirectory().checkIfIDIsUnique(Integer.parseInt(ID))){
            JOptionPane.showMessageDialog(null, String.format("Person ID %s already exists!", ID),"Warning",JOptionPane.ERROR_MESSAGE);
        }
        else if(!ecosystem.getPersonDirectory().checkIfNameIsUnique(name)){
            JOptionPane.showMessageDialog(null, String.format("Person name %s already exists!", name),"Warning",JOptionPane.ERROR_MESSAGE);
        }
        else if(!ecosystem.getPersonDirectory().checkIfEmailIsUnique(email)){
            JOptionPane.showMessageDialog(null, String.format("Person email %s already exists!", email),"Warning",JOptionPane.ERROR_MESSAGE);
        }
        else{
            ecosystem.getPersonDirectory().newPerson(Integer.parseInt(ID), name, street, zipcode, Integer.parseInt(age), community, phoneNo, email);
            populatePersonTable();
            JOptionPane.showMessageDialog(null, "Person Created");
        }
        
//        System.out.println(ecosystem.getPersonDirectory().getPersonList());

        txtIdP.setText("");
        txtNameP.setText("");
        txtAddressP.setText("");
        txtZipP.setText("");
        txtAgeP.setText("");
        txtPHNoP.setText("");
        txtEmailP.setText("");
        txtCommunityP.setText("");


    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblMPerson.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Row");
        } else {
            btnUpdateP.setEnabled(true);
            btnDelete.setEnabled(true);
            txtIdP.setEnabled(false);
            DefaultTableModel model = (DefaultTableModel) tblMPerson.getModel();
//            UserAccount selectedUser = (UserAccount) model.getValueAt(selectedRow, 0);
            Person selectedPerson = (Person) model.getValueAt(selectedRow, 0);
            txtIdP.setText(String.valueOf(selectedPerson.getPersonID()));
            txtNameP.setText(selectedPerson.getPersonName());
            txtAddressP.setText(selectedPerson.getAdress());
            txtZipP.setText(selectedPerson.getZipcode());
            txtAgeP.setText(String.valueOf(selectedPerson.getAge()));
            txtPHNoP.setText(String.valueOf(selectedPerson.getPhoneNo()));
            txtEmailP.setText(selectedPerson.getEmail());
            txtCommunityP.setText(selectedPerson.getCommunityName());

        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMPerson.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Row");
        } else {
            btnDelete.setEnabled(false);
            btnUpdateP.setEnabled(false);
            
            DefaultTableModel model = (DefaultTableModel) tblMPerson.getModel();
            Person selectedPerson = (Person) model.getValueAt(selectedRow, 0);

            ecosystem.getPersonDirectory().deletePerson(selectedPerson);

            populatePersonTable();
            
            txtIdP.setText("");
            txtNameP.setText("");
            txtAddressP.setText("");
            txtZipP.setText("");
            txtAgeP.setText("");
            txtPHNoP.setText("");
            txtEmailP.setText("");
            txtCommunityP.setText("");
            txtIdP.setEnabled(true);
    }//GEN-LAST:event_btnDeleteActionPerformed
    }
    private void btnUpdatePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePActionPerformed
        // TODO add your handling code here:
        txtIdP.setEnabled(false);
        int ID = Integer.parseInt(txtIdP.getText());
        String name = txtNameP.getText();
        String street = txtAddressP.getText();
        String zipcode = txtZipP.getText();
        int age = Integer.parseInt(txtAgeP.getText());
        String community = txtCommunityP.getText();
        String phoneNo = txtPHNoP.getText();
        String email = txtEmailP.getText();
        
        int selectedRow = tblMPerson.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a Row");
            txtIdP.setEnabled(true);
        }
        else{
            btnDelete.setEnabled(false);
            btnUpdateP.setEnabled(false);
            DefaultTableModel model = (DefaultTableModel) tblMPerson.getModel();
            Person person = (Person)model.getValueAt(selectedRow, 0);
            
            if (txtIdP.getText().isEmpty() || txtAgeP.getText().isEmpty() || name.isEmpty() || street.isEmpty() || zipcode.isEmpty() || community.isEmpty() || phoneNo.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty Fields", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else if (phoneNo.length() != 10) {
            JOptionPane.showMessageDialog(null, "Invalid Phone Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else if (validateEmail(email) == false) {
            JOptionPane.showMessageDialog(null, "Invalid Email", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if (zipcode.length() != 5) {
            JOptionPane.showMessageDialog(null, "Invalid Zipcode", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
             
        
            else{
            ecosystem.getPersonDirectory().updatePerson(person, name, street, zipcode, age, community, phoneNo, email);
//            System.out.print(username);
            JOptionPane.showMessageDialog(this, " Person updated successfully");
            populatePersonTable();
            txtIdP.setText("");
            txtNameP.setText("");
            txtAddressP.setText("");
            txtZipP.setText("");
            txtAgeP.setText("");
            txtPHNoP.setText("");
            txtEmailP.setText("");
            txtCommunityP.setText("");
            txtIdP.setEnabled(true);
        }
            
        }
        
    }//GEN-LAST:event_btnUpdatePActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
                sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        txtIdP.setEnabled(true);
        btnUpdateP.setEnabled(false);
        btnDelete.setEnabled(false);
        txtIdP.setText("");
        txtNameP.setText("");
        txtAddressP.setText("");
        txtZipP.setText("");
        txtAgeP.setText("");
        txtPHNoP.setText("");
        txtEmailP.setText("");
        txtCommunityP.setText("");
    }//GEN-LAST:event_btnCancelActionPerformed


    private boolean validateEmail(String email) {
        Pattern p = Pattern.compile("^[a-zA-z0-9]+@[a-zA-Z0-9]+.[com]+$");
        Matcher m = p.matcher(email);
        return m.matches();
    }
    private boolean validateId(int ID) {
        Pattern p = Pattern.compile("^[0-9]+$");
        Matcher m = p.matcher(txtIdP.getText());
        return m.matches();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdateP;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblApartment;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblManagePerson;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblStreet;
    private javax.swing.JTable tblMPerson;
    private javax.swing.JTextField txtAddressP;
    private javax.swing.JTextField txtAgeP;
    private javax.swing.JTextField txtCommunityP;
    private javax.swing.JTextField txtEmailP;
    private javax.swing.JTextField txtIdP;
    private javax.swing.JTextField txtNameP;
    private javax.swing.JTextField txtPHNoP;
    private javax.swing.JTextField txtZipP;
    // End of variables declaration//GEN-END:variables

    private void populatePersonTable() {

        DefaultTableModel dtm = (DefaultTableModel) tblMPerson.getModel();
        dtm.setRowCount(0);

        for (Person person : ecosystem.getPersonDirectory().getPersonList()) {
//            System.out.println(person);
            Object[] row = new Object[8];
            row[0] = person;
            row[1] = person.getPersonID();
            row[2] = person.getAdress();
            row[3] = person.getZipcode();
            row[4] = person.getAge();
            row[5] = person.getCommunityName();
            row[6] = person.getPhoneNo();
            row[7] = person.getEmail();

            dtm.addRow(row);

        }

    }
}
